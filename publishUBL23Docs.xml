<project default="make" xmlns:if="ant:if" xmlns:unless="ant:unless">

<target name="make">
  <condition property="is-dos">
    <os family="windows"/>
  </condition>
  <!--documentation-->
  <echo message="stage=${stage}"/>
  <echo message="version=${version}"/>
  <echo message="datetimelocal=${datetimelocal}"/>

  <!--copy all entity replacements generated from the artefacts, preserving
      the date and time stamp so that the file can be checked for changes-->
  <copy preservelastmodified="true" todir="." failonerror="false"
file="${dir}/artefacts-UBL-2.3-${stage}-${version}/archive-only-not-in-final-distribution/old2newDocBook-UBL-2.3-${stage}-UBL-2.2-documents-ent.xml"/>
  <copy preservelastmodified="true" todir="." failonerror="false"
file="${dir}/artefacts-UBL-2.3-${stage}-${version}/archive-only-not-in-final-distribution/old2newDocBook-UBL-2.3-${stage}-UBL-2.2-library-ent.xml"/>
  <copy preservelastmodified="true" todir="." failonerror="false"
file="${dir}/artefacts-UBL-2.3-${stage}-${version}/archive-only-not-in-final-distribution/old2newDocBook-UBL-2.3-${stage}-UBL-2.3-csprd02-documents-ent.xml"/>
  <copy preservelastmodified="true" todir="." failonerror="false"
file="${dir}/artefacts-UBL-2.3-${stage}-${version}/archive-only-not-in-final-distribution/old2newDocBook-UBL-2.3-${stage}-UBL-2.3-csprd02-library-ent.xml"/>
  <!--remove any vestiges of a previous run indicating missing results-->
  <delete  file="${dir}/missing---UBL-2.3-html---missing.txt"/>
  <delete  file="${dir}/missing---UBL-2.3-pdf---missing.txt"/>
  <delete  file="${dir}/missing---iso-iec-19845-draft-pdf---missing.txt"/>

  <antcall target="-make-xml"/>

  <!--if not attempting to update files, ignore the update of PDF and HTML
      by making the assumption that the files are up-to-date already, but
      then delete them -->
  <condition property="not-attempting-to-produce-necessary-results">
    <and>
      <not>
        <isset property="validatedInputs"/>
      </not>
      <not>
        <isset property="docs-UBL-xml-okay"/>
      </not>
      <equals arg1="${setareuser}" arg2=""/>
    </and>
  </condition>
  <condition property="docs-UBL-okay">
    <isset property="not-attempting-to-produce-necessary-results"/>
  </condition>
  <antcall target="-delete-results-not-being-produced"
           if:set="validatedInputs"/>
  
  <!--At this point either the results are up-to-date because of no changes,
      the results are not up-to-date and they've been deleted because there
      is no access to the server, or the results are not up-to-date and the
      server will be called to update them.
      This allows someone without server access to process the XML to get
      almost a complete result.
  -->

  <antcall target="-make-docs" if:set="validatedInputs"/>
  
  <antcall target="-package-docs"/>

  <!--At this point all of the documentation has been zipped up in its own
      package, ready to use. The artefacts are assumed to have been zipped
      up already before this process has run-->

  <antcall target="-package-distribution"/>
</target>

<target name="-check-xml">
  <uptodate targetfile="${dir}/UBL-2.3.xml"
            property=  "docs-UBL-xml-okay">
    <srcfiles dir=".">
      <include name="UBL.xml"/>
      <include name="UBL-2.3-Party-summary-information.xml"/>
      <include name="UBL-2.3-Schema-summary-information.xml"/>
      <include name="old2newDocBook-UBL-2.3-${stage}-UBL-2.2-documents-ent.xml"/>
      <include name="old2newDocBook-UBL-2.3-${stage}-UBL-2.2-library-ent.xml"/>
      <include
         name="old2newDocBook-UBL-2.3-${stage}-UBL-2.3-csprd02-documents-ent.xml"/>
      <include
         name="old2newDocBook-UBL-2.3-${stage}-UBL-2.3-csprd02-library-ent.xml"/>
      <include name="schemadoc2db.xsl"/>
      <include name="partydoc2db.xsl"/>
      <include name="hub2processSummary.xsl"/>
    </srcfiles>
  </uptodate>  
</target>

<target name="-make-xml" depends="-check-xml" unless="docs-UBL-xml-okay">
  <delete file="${dir}/UBL-2.3.xml"/>
  <delete file="${dir}/UBL-2.3-assembled.xml"/>
  <!--create all entity replacements generated from contribution files-->
  <echo message="Distilling entities from various inputs"/>
  <!--empty all entity replacements in case last generation was faulty-->
  <delete file="summary-processes-ent.xml"/>
  <delete file="summary-parties-ent.xml"/>
  <delete file="summary-namespaces-ent.xml"/>
  <delete file="summary-schemas-ent.xml"/>
  <delete file="summary-examples-ent.xml"/>
  <touch  file="summary-processes-ent.xml"/>
  <touch  file="summary-parties-ent.xml"/>
  <touch  file="summary-namespaces-ent.xml"/>
  <touch  file="summary-schemas-ent.xml"/>
  <touch  file="summary-examples-ent.xml"/>
  <!--now the UBL.xml file should be able to parse provided old2new are okay-->
  <java classname="net.sf.saxon.Transform">
    <arg value="-xsl:hub2processSummary.xsl"/>
    <arg value="-s:UBL.xml"/>
    <arg value="-o:summary-processes-ent.xml"/>
    <arg value="old=UBL-2.2-modified.xml"/>
  </java>
  <java jar="db/spec-0.8/validate/xjparse.jar" fork="true">
    <arg value="-v"/>
    <arg value="UBL-2.3-Party-summary-information.xml"/>
  </java>
  <java classname="net.sf.saxon.Transform">
    <arg value="-xsl:partydoc2db.xsl"/>
    <arg value="-s:UBL-2.3-Party-summary-information.xml"/>
    <arg value="-o:summary-parties-ent.xml"/>
  </java>
  <java jar="db/spec-0.8/validate/xjparse.jar" fork="true">
    <arg value="-v"/>
    <arg value="UBL-2.3-Schema-summary-information.xml"/>
  </java>
  <java classname="net.sf.saxon.Transform">
    <arg value="-xsl:schemadoc2db.xsl"/>
    <arg value="-s:UBL-2.3-Schema-summary-information.xml"/>
  </java>
  <!--assemble XML-->
  <echo message="Assembling UBL-2.3.xml"/>
  <java classname="net.sf.saxon.Transform">
     <arg value="-xsl:assembleEntities.xsl"/>
     <arg value="-s:UBL.xml"/>
     <arg value="-o:${dir}/UBL-2.3-assembled.xml"/>
  </java>
  <!--confirm the input file is valid-->
  <antcall target="-validate">
    <param name="source" value="${dir}/UBL-2.3-assembled.xml"/>
  </antcall>
  <move file="${dir}/UBL-2.3-assembled.xml" tofile="${dir}/UBL-2.3.xml"/>
  <delete file="output.txt"/>
</target>

<target name="-validate" depends="-validate-shell,-validate-dos">
  <condition property="validatedInputs">
    <equals arg1="${validateResult}" arg2="0"/>
  </condition>
</target>

<target name="-validate-shell" unless="${is-dos}">
  <exec resultproperty="validateResult" executable="sh">
    <arg value="db/spec-0.8/validate/validate.sh"/>
    <arg value="${source}"/>
  </exec>
</target>

<target name="-validate-dos" if="${is-dos}">
  <exec resultproperty="validateResult" executable="cmd.exe">
    <arg value="/c"/>
    <arg value="db\spec-0.8\validate\validate.bat"/>
    <arg value="${source}"/>
  </exec>
</target>

<target name="-delete-results-not-being-produced" 
        if="not-attempting-to-produce-necessary-results">
  <delete file="${dir}/UBL-2.3-preview.html"/>
  <delete file="${dir}/UBL-2.3.html"/>
  <delete file="${dir}/UBL-2.3.pdf"/>
  <delete file="${dir}/iso-iec-19845-draft.pdf"/>
  <delete file="${dir}/UBL-2.3-pub.zip"/>
  <echo   file="${dir}/missing---UBL-2.3-html---missing.txt"/>
  <echo   file="${dir}/missing---UBL-2.3-pdf---missing.txt"/>
  <echo   file="${dir}/missing---iso-iec-19845-draft-pdf---missing.txt"/>
  <echo message="Preparing a preview of the content in HTML..."/>
  <java classname="net.sf.saxon.Transform">
    <arg value="-xsl:db/spec-0.8/htmlruntime/spec-0.8/stylesheets/oasis-specification-html-offline.xsl"/>
    <arg value="-s:UBL.xml"/>
    <arg value="-o:${dir}/UBL-2.3-preview.html"/>
  </java>
</target>

<target name="-check-docs">
  <uptodate targetfile="${dir}/UBL-2.3.html"
            property=  "docs-UBL-html-okay">
    <srcfiles dir="${dir}">
      <include name="UBL-2.3.xml"/>
    </srcfiles>
  </uptodate>  
  <uptodate targetfile="${dir}/UBL-2.3.pdf"
            property=  "docs-UBL-pdf-okay">
    <srcfiles dir="${dir}">
      <include name="UBL-2.3.xml"/>
    </srcfiles>
  </uptodate>
  <uptodate targetfile="${dir}/iso-iec-19845-draft.pdf"
            property=  "docs-UBL-iso-okay">
    <srcfiles dir="${dir}">
      <include name="UBL-2.3.xml"/>
    </srcfiles>
  </uptodate>
  <condition property="docs-UBL-okay">
    <and>
      <istrue value="${docs-UBL-xml-okay}"/>
      <istrue value="${docs-UBL-html-okay}"/>
      <istrue value="${docs-UBL-pdf-okay}"/>
      <istrue value="${docs-UBL-iso-okay}"/>
    </and>
  </condition>
</target>

<target name="-make-docs" depends="-check-docs" unless="docs-UBL-okay">
  <!--remove old results-->
  <delete file="${dir}/UBL-2.3-preview.html"/>
  <delete file="${dir}/UBL-2.3.html"/>
  <delete file="${dir}/UBL-2.3.pdf"/>
  <delete file="${dir}/iso-iec-19845-draft.pdf"/>
  <delete file="${dir}/UBL-2.3-pub.zip"/>
  <!--package inputs to the publishing process-->
  <zip destfile="${dir}/UBL-2.3-pub.zip">
    <fileset dir="${dir}">
      <include name="UBL-2.3.xml"/>
    </fileset>
    <fileset dir=".">
      <include name="setare-user-parameters.xml"/>
      <include name="art/**"/>
    </fileset>
  </zip>
  <!--create publishing outputs-->
  <echo message="Submitting print job..."/>
  <property name="serverScript" location="SetareServerAnt.xml"/> 
  <ant antfile="${serverScript}" dir="${dir}">
    <property name="entrypoint" value="OASIS-spec2pdfhtml-ISO-pdf"/>
    <property name="fileupload"
              value="UBL-2.3-pub.zip"/>
    <property name="dateprefix" value="UBL 2.3"/>
  </ant>
  <echo message="Check and cleanup..."/>
  <available property="ready-pdf" file="${dir}/UBL-2.3.docbook.pdf"/>
  <fail unless="ready-pdf" message="PDF not created"/>
  <available property="ready-iso" file="${dir}/UBL-2.3.iso.pdf"/>
  <fail unless="ready-iso" message="ISO PDF not created"/>
  <available property="ready-html" file="${dir}/UBL-2.3.docbook.html"/>
  <fail unless="ready-html" message="HTML not created"/>
  <!--these touches are necessary because unzip doesn't preserve time of day-->
  <touch file="${dir}/UBL-2.3.docbook.pdf"/>
  <touch file="${dir}/UBL-2.3.iso.pdf"/>
  <touch file="${dir}/UBL-2.3.docbook.html"/>
  <!--the names needed are not the names created-->
  <move preservelastmodified="true" file="${dir}/UBL-2.3.docbook.pdf"
        tofile="${dir}/UBL-2.3.pdf"/>
  <move preservelastmodified="true" file="${dir}/UBL-2.3.docbook.html"
        tofile="${dir}/UBL-2.3.html"/>
  <move preservelastmodified="true" file="${dir}/UBL-2.3.iso.pdf"
        tofile="${dir}/iso-iec-19845-draft.pdf"/>
  <!--intermediate file no longer needed-->
  <delete file="${dir}/UBL-2.3-pub.zip"/>
</target>

<target name="-package-docs">
  <echo message="Checking existence of results..."/>
  <available property="xml-made" file="${dir}/UBL-2.3.xml"/>
  <available property="html-made" file="${dir}/UBL-2.3.html"/>
  <available property="pdf-made" file="${dir}/UBL-2.3.pdf"/>
  <available property="iso-made" file="${dir}/iso-iec-19845-draft.pdf"/>
  <condition property="docs-not-made">
    <not>
      <and>
        <istrue value="${xml-made}"/>
        <or>
          <isset property="not-attempting-to-produce-necessary-results"/>
          <and>
            <istrue value="${html-made}"/>
            <istrue value="${pdf-made}"/>
            <istrue value="${iso-made}"/>
          </and>
        </or>
      </and>
    </not>
  </condition>
  <property name="xml-made" value="false"/>
  <property name="html-made" value="false"/>
  <property name="pdf-made" value="false"/>
  <property name="iso-made" value="false"/>
  <property name="not-attempting-to-produce-necessary-results" value="false"/>
  <fail if="docs-not-made"
        message="Problem with creating the documentation XML:${xml-made}, HTML:${html-made}, PDF:${pdf-made}, ISO:${iso-made}, SKIP:${not-attempting-to-produce-necessary-results}"/>

  <delete dir="${dir}/hub-UBL-2.3-${stage}-${version}"/>
  <mkdir dir="${dir}/hub-UBL-2.3-${stage}-${version}"/>
  <copy preservelastmodified="true"
        todir="${dir}/hub-UBL-2.3-${stage}-${version}">
    <fileset dir="${dir}">
      <include name="UBL-2.3.xml"/>
      <include name="UBL-2.3-preview.html"/>
      <include name="UBL-2.3.html"/>
      <include name="UBL-2.3.pdf"/>
      <include name="iso-iec-19845-draft.pdf"/>
      <include name="missing*missing.txt"/>
    </fileset>
  </copy>
  <!--<mkdir dir="${dir}/hub-UBL-2.3-${stage}-${version}/iso-iec-19845-draft-sts"/>
  <copy preservelastmodified="true" todir="${dir}/hub-UBL-2.3-${stage}-${version}/iso-iec-19845-draft-sts">
    <fileset dir=".">
      <include name="UBL-2.3.iso.graphics/**"/>
      <include name="iso-iec-19845-draft.xml"/>
    </fileset>
  </copy>-->

  <mkdir dir="${dir}/hub-UBL-2.3-${stage}-${version}/db"/>
  <copy preservelastmodified="true"
        todir="${dir}/hub-UBL-2.3-${stage}-${version}/db">
    <fileset dir="db/spec-0.8/htmlruntime">
     <include name="**"/>
    </fileset>
  </copy>

  <mkdir dir="${dir}/hub-UBL-2.3-${stage}-${version}/art"/>
  <copy preservelastmodified="true"
        todir="${dir}/hub-UBL-2.3-${stage}-${version}/art">
    <fileset dir="htmlart">
     <include name="*"/>
    </fileset>
  </copy>
  <mkdir dir="${dir}/hub-UBL-2.3-${stage}-${version}/art/artpdf"/>
  <copy preservelastmodified="true"
        todir="${dir}/hub-UBL-2.3-${stage}-${version}/art/artpdf">
    <fileset dir="art">
     <include name="*"/>
    </fileset>
  </copy>

  <mkdir dir="${dir}/hub-UBL-2.3-${stage}-${version}/archive-only-not-in-final-distribution"/>
  <condition property="ent-processes-okay">
    <length file="summary-processes-ent.xml" when="greater" length="2"/>
  </condition>
  <copy preservelastmodified="true" if:set="ent-processes-okay"
        todir="${dir}/hub-UBL-2.3-${stage}-${version}/archive-only-not-in-final-distribution"
        file="summary-processes-ent.xml"/>
  <condition property="ent-parties-okay">
    <length file="summary-parties-ent.xml" when="greater" length="2"/>
  </condition>
  <copy preservelastmodified="true" if:set="ent-parties-okay"
        todir="${dir}/hub-UBL-2.3-${stage}-${version}/archive-only-not-in-final-distribution"
        file="summary-parties-ent.xml"/>
  <condition property="ent-namespaces-okay">
    <length file="summary-namespaces-ent.xml" when="greater" length="2"/>
  </condition>
  <copy preservelastmodified="true" if:set="ent-namespaces-okay"
        todir="${dir}/hub-UBL-2.3-${stage}-${version}/archive-only-not-in-final-distribution"
        file="summary-namespaces-ent.xml"/>
  <condition property="ent-schemas-okay">
    <length file="summary-schemas-ent.xml" when="greater" length="2"/>
  </condition>
  <copy preservelastmodified="true" if:set="ent-schemas-okay"
        todir="${dir}/hub-UBL-2.3-${stage}-${version}/archive-only-not-in-final-distribution"
        file="summary-schemas-ent.xml"/>
  <condition property="ent-examples-okay">
    <length file="summary-examples-ent.xml" when="greater" length="2"/>
  </condition>
  <copy preservelastmodified="true" if:set="ent-examples-okay"
        todir="${dir}/hub-UBL-2.3-${stage}-${version}/archive-only-not-in-final-distribution"
        file="summary-examples-ent.xml"/>
  <copy preservelastmodified="true"
        todir="${dir}/hub-UBL-2.3-${stage}-${version}/archive-only-not-in-final-distribution">
    <fileset dir=".">
      <include name="UBL.xml"/>
      <include name="UBL-2.3-Party-summary-information.xml"/>
      <include name="UBL-2.3-Schema-summary-information.xml"/>
    </fileset>
  </copy>

<!--
    Cannot create zip until console log and error exit files added to archive. 
    
  <delete  file="${dir}/hub-UBL-2.3-${stage}-${version}.zip"/>
  <zip destfile="${dir}/hub-UBL-2.3-${stage}-${version}.zip"
       basedir="${dir}" includes="hub-UBL-2.3-${stage}-${version}/**"/>
  <delete dir="${dir}/hub-UBL-2.3-${stage}-${version}"/>
  <unzip src="${dir}/hub-UBL-2.3-${stage}-${version}.zip" 
         dest="${dir}"/>

  <touch datetime="${datetimelocal}" pattern="yyyyMMdd-HHmm">
    <fileset dir="${dir}">
      <include name="hub-UBL-2.3-${stage}-${version}.zip"/>
    </fileset>
  </touch>
  -->

</target>

<target name="-check-package-distribution">
  <available property="ready-package-distribution"
             file="${dir}/artefacts-UBL-2.3-${stage}-${version}.zip"/>
</target>

<target name="-package-distribution" depends="-check-package-distribution" 
        if="ready-package-distribution">
  <!--old results no longer helpful-->
  <delete  dir="${dir}/UBL-2.3-${stage}-${version}"/>
  <delete  dir="${dir}/UBL-2.3-${stage}-${version}-archive-only"/>
  <delete file="${dir}/UBL-2.3-${stage}-${version}.zip"/>
  <delete file="${dir}/UBL-2.3-${stage}-${version}-archive-only.zip"/>
  
 <!--start the distribution directory with the contents of the artefacts
     package and then the contents of the hub package-->
  <!--<unzip src="${dir}/artefacts-UBL-2.3-${stage}-${version}.zip" 
         dest="${dir}/UBL-2.3-${stage}-${version}"/>-->
  <copy todir="${dir}/UBL-2.3-${stage}-${version}">
    <fileset 
dir="${dir}/UBL-2.3-${stage}-${version}/artefacts-UBL-2.3-${stage}-${version}">
      <include name="**"/>
    </fileset>
  </copy>
  <!--directory is empty now-->
  <!--<delete
dir="${dir}/UBL-2.3-${stage}-${version}/artefacts-UBL-2.3-${stage}-${version}"/>-->

  <!--<unzip src="${dir}/hub-UBL-2.3-${stage}-${version}.zip" 
         dest="${dir}/UBL-2.3-${stage}-${version}"/>-->
  <copy todir="${dir}/UBL-2.3-${stage}-${version}">
    <fileset 
dir="${dir}/UBL-2.3-${stage}-${version}/hub-UBL-2.3-${stage}-${version}">
      <include name="**"/>
    </fileset>
  </copy>
  <!--<delete
dir="${dir}/UBL-2.3-${stage}-${version}/hub-UBL-2.3-${stage}-${version}"/>-->
  
  <!--peel off the STS results into the archive-->
  <move file="${dir}/UBL-2.3-${stage}-${version}/iso-iec-19845-draft-sts"
todir="${dir}/UBL-2.3-${stage}-${version}/archive-only-not-in-final-distribution"
        failonerror="false"/>
  <!--use "copy" to distribute to all, "move" for only archive-->
  <copy file="${dir}/UBL-2.3-${stage}-${version}/iso-iec-19845-draft.pdf"
todir="${dir}/UBL-2.3-${stage}-${version}/"
        failonerror="false"/>
  <!--artefacts archive moved to distribution archive-->  
  <move tofile="${dir}/UBL-2.3-${stage}-${version}-archive-only"
file="${dir}/UBL-2.3-${stage}-${version}/archive-only-not-in-final-distribution"
   />
  
  <touch datetime="${datetimelocal}" pattern="yyyyMMdd-HHmm">
    <fileset dir="${dir}/UBL-2.3-${stage}-${version}"/>
  </touch>

  <zip destfile="${dir}/UBL-2.3-${stage}-${version}-archive-only.zip"
       basedir="${dir}" includes="UBL-2.3-${stage}-${version}-archive-only/**"/>
  <delete dir="${dir}/UBL-2.3-${stage}-${version}-archive-only"/>
  <unzip src="${dir}/UBL-2.3-${stage}-${version}-archive-only.zip" 
         dest="${dir}"/>
  <zip destfile="${dir}/UBL-2.3-${stage}-${version}.zip"
       basedir="${dir}" includes="UBL-2.3-${stage}-${version}/**"/>
  <delete dir="${dir}/UBL-2.3-${stage}-${version}"/>
  <unzip src="${dir}/UBL-2.3-${stage}-${version}.zip" 
         dest="${dir}"/>

  <!--okay to stamp the ZIP files-->
  <touch datetime="${datetimelocal}" pattern="yyyyMMdd-HHmm">
    <fileset dir="${dir}">
      <include name="UBL-2.3-${stage}-${version}.zip"/>
      <include name="UBL-2.3-${stage}-${version}-archive-only.zip"/>
    </fileset>
  </touch>
  
  <!--final consistency checks-->
  
  <echo message="Creating: ${dir}/UBL-2.3-${stage}-${version}-dir-listing.xml..."/>
  <exec executable="sh">
    <arg value="utilities/xml-dir/bin/xml-dir-listing"/>
    <arg value="-o"/>
    <arg value="${dir}/UBL-2.3-${stage}-${version}-dir-listing.xml"/>
    <arg value="${dir}/UBL-2.3-${stage}-${version}"/>    
  </exec>
  <echo message="Creating: ${dir}/UBL-2.3-${stage}-${version}-gentext.xml..."/>
  <java append="true" classname="net.sf.saxon.Transform">
     <arg value="-xsl:hub-integrity.xsl"/>
     <arg value="-s:${dir}/UBL-2.3-${stage}-${version}-dir-listing.xml"/>
     <arg value="-o:${dir}/UBL-2.3-${stage}-${version}-gentext.xml"/>
     <arg value="hub-uri=${dir}/UBL-2.3-${stage}-${version}/UBL-2.3.xml"/>
     <arg value="gc-uri=${dir}/UBL-2.3-${stage}-${version}/mod/UBL-Entities-2.3.gc"/>
    <arg value="pub-version=2.3"/>
  </java>
</target>

</project>